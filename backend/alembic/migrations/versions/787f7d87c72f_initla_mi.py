"""Initla mi

Revision ID: 787f7d87c72f
Revises: 
Create Date: 2025-09-19 17:51:53.168057

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '787f7d87c72f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('adminaccount',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sa.Enum('STUDENT', 'SUPERVISOR', 'ADMIN', name='role'), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('department', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_adminaccount_email'), 'adminaccount', ['email'], unique=True)
    op.create_table('supervisoraccount',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sa.Enum('STUDENT', 'SUPERVISOR', 'ADMIN', name='role'), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('department', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('faculty', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('office_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('office_hours', sa.JSON(), nullable=True),
    sa.Column('bio', sqlmodel.sql.sqltypes.AutoString(length=300), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_index(op.f('ix_supervisoraccount_email'), 'supervisoraccount', ['email'], unique=True)
    op.create_table('studentaccount',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role', sa.Enum('STUDENT', 'SUPERVISOR', 'ADMIN', name='role'), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('department', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('matric_no', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('supervisor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['supervisor_id'], ['supervisoraccount.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('matric_no')
    )
    op.create_index(op.f('ix_studentaccount_email'), 'studentaccount', ['email'], unique=True)
    op.create_table('project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=False),
    sa.Column('year', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('document_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'UNDER_REVIEW', 'APPROVED', 'REJECTED', name='status'), nullable=False),
    sa.Column('review_comment', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('supervisor_id', sa.Integer(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['student_id'], ['studentaccount.id'], ),
    sa.ForeignKeyConstraint(['supervisor_id'], ['supervisoraccount.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_title'), 'project', ['title'], unique=False)
    op.create_index(op.f('ix_project_year'), 'project', ['year'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_project_year'), table_name='project')
    op.drop_index(op.f('ix_project_title'), table_name='project')
    op.drop_table('project')
    op.drop_index(op.f('ix_studentaccount_email'), table_name='studentaccount')
    op.drop_table('studentaccount')
    op.drop_index(op.f('ix_supervisoraccount_email'), table_name='supervisoraccount')
    op.drop_table('supervisoraccount')
    op.drop_index(op.f('ix_adminaccount_email'), table_name='adminaccount')
    op.drop_table('adminaccount')
    # ### end Alembic commands ###
